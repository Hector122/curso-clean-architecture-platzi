// Generated by Dagger (https://dagger.dev).
package com.platzi.android.rickandmorty.usecases.di;

import com.platzi.android.rickandmorty.data.EpisodeRepository;
import com.platzi.android.rickandmorty.usecases.GetEpisodeFromCharacterUseCase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UseCaseModule_GetEpisodeFromCharacterUseCaseProviderFactory implements Factory<GetEpisodeFromCharacterUseCase> {
  private final UseCaseModule module;

  private final Provider<EpisodeRepository> episodeRepositoryProvider;

  public UseCaseModule_GetEpisodeFromCharacterUseCaseProviderFactory(UseCaseModule module,
      Provider<EpisodeRepository> episodeRepositoryProvider) {
    this.module = module;
    this.episodeRepositoryProvider = episodeRepositoryProvider;
  }

  @Override
  public GetEpisodeFromCharacterUseCase get() {
    return getEpisodeFromCharacterUseCaseProvider(module, episodeRepositoryProvider.get());
  }

  public static UseCaseModule_GetEpisodeFromCharacterUseCaseProviderFactory create(
      UseCaseModule module, Provider<EpisodeRepository> episodeRepositoryProvider) {
    return new UseCaseModule_GetEpisodeFromCharacterUseCaseProviderFactory(module, episodeRepositoryProvider);
  }

  public static GetEpisodeFromCharacterUseCase getEpisodeFromCharacterUseCaseProvider(
      UseCaseModule instance, EpisodeRepository episodeRepository) {
    return Preconditions.checkNotNull(instance.getEpisodeFromCharacterUseCaseProvider(episodeRepository), "Cannot return null from a non-@Nullable @Provides method");
  }
}
