// Generated by Dagger (https://dagger.dev).
package com.platzi.android.rickandmorty.usecases.di;

import com.platzi.android.rickandmorty.data.CharacterRepository;
import com.platzi.android.rickandmorty.usecases.GetFavoriteCharacterStatusUseCase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UseCaseModule_GetFavoriteCharacterStatusUseCaseProviderFactory implements Factory<GetFavoriteCharacterStatusUseCase> {
  private final UseCaseModule module;

  private final Provider<CharacterRepository> characterRepositoryProvider;

  public UseCaseModule_GetFavoriteCharacterStatusUseCaseProviderFactory(UseCaseModule module,
      Provider<CharacterRepository> characterRepositoryProvider) {
    this.module = module;
    this.characterRepositoryProvider = characterRepositoryProvider;
  }

  @Override
  public GetFavoriteCharacterStatusUseCase get() {
    return getFavoriteCharacterStatusUseCaseProvider(module, characterRepositoryProvider.get());
  }

  public static UseCaseModule_GetFavoriteCharacterStatusUseCaseProviderFactory create(
      UseCaseModule module, Provider<CharacterRepository> characterRepositoryProvider) {
    return new UseCaseModule_GetFavoriteCharacterStatusUseCaseProviderFactory(module, characterRepositoryProvider);
  }

  public static GetFavoriteCharacterStatusUseCase getFavoriteCharacterStatusUseCaseProvider(
      UseCaseModule instance, CharacterRepository characterRepository) {
    return Preconditions.checkNotNull(instance.getFavoriteCharacterStatusUseCaseProvider(characterRepository), "Cannot return null from a non-@Nullable @Provides method");
  }
}
