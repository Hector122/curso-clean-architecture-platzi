// Generated by Dagger (https://dagger.dev).
package com.platzi.android.rickandmorty.databasemanager.di;

import com.platzi.android.rickandmorty.data.LocalCharacterDataSource;
import com.platzi.android.rickandmorty.databasemanager.CharacterDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_LocalCharacterDataSourceProviderFactory implements Factory<LocalCharacterDataSource> {
  private final DatabaseModule module;

  private final Provider<CharacterDatabase> databaseProvider;

  public DatabaseModule_LocalCharacterDataSourceProviderFactory(DatabaseModule module,
      Provider<CharacterDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public LocalCharacterDataSource get() {
    return localCharacterDataSourceProvider(module, databaseProvider.get());
  }

  public static DatabaseModule_LocalCharacterDataSourceProviderFactory create(DatabaseModule module,
      Provider<CharacterDatabase> databaseProvider) {
    return new DatabaseModule_LocalCharacterDataSourceProviderFactory(module, databaseProvider);
  }

  public static LocalCharacterDataSource localCharacterDataSourceProvider(DatabaseModule instance,
      CharacterDatabase database) {
    return Preconditions.checkNotNull(instance.localCharacterDataSourceProvider(database), "Cannot return null from a non-@Nullable @Provides method");
  }
}
