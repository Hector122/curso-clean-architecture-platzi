// Generated by Dagger (https://dagger.dev).
package com.platzi.android.rickandmorty.databasemanager.di;

import android.app.Application;
import com.platzi.android.rickandmorty.databasemanager.CharacterDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_DatabaseProviderFactory implements Factory<CharacterDatabase> {
  private final DatabaseModule module;

  private final Provider<Application> appProvider;

  public DatabaseModule_DatabaseProviderFactory(DatabaseModule module,
      Provider<Application> appProvider) {
    this.module = module;
    this.appProvider = appProvider;
  }

  @Override
  public CharacterDatabase get() {
    return databaseProvider(module, appProvider.get());
  }

  public static DatabaseModule_DatabaseProviderFactory create(DatabaseModule module,
      Provider<Application> appProvider) {
    return new DatabaseModule_DatabaseProviderFactory(module, appProvider);
  }

  public static CharacterDatabase databaseProvider(DatabaseModule instance, Application app) {
    return Preconditions.checkNotNull(instance.databaseProvider(app), "Cannot return null from a non-@Nullable @Provides method");
  }
}
