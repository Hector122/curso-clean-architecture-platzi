// Generated by Dagger (https://dagger.dev).
package com.platzi.android.rickandmorty.requestmanager.di;

import com.platzi.android.rickandmorty.data.RemoteCharacterDataSource;
import com.platzi.android.rickandmorty.requestmanager.CharacterRequest;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class APIModule_RemoteCharacterDataSourceProviderFactory implements Factory<RemoteCharacterDataSource> {
  private final APIModule module;

  private final Provider<CharacterRequest> characterRequestProvider;

  public APIModule_RemoteCharacterDataSourceProviderFactory(APIModule module,
      Provider<CharacterRequest> characterRequestProvider) {
    this.module = module;
    this.characterRequestProvider = characterRequestProvider;
  }

  @Override
  public RemoteCharacterDataSource get() {
    return remoteCharacterDataSourceProvider(module, characterRequestProvider.get());
  }

  public static APIModule_RemoteCharacterDataSourceProviderFactory create(APIModule module,
      Provider<CharacterRequest> characterRequestProvider) {
    return new APIModule_RemoteCharacterDataSourceProviderFactory(module, characterRequestProvider);
  }

  public static RemoteCharacterDataSource remoteCharacterDataSourceProvider(APIModule instance,
      CharacterRequest characterRequest) {
    return Preconditions.checkNotNull(instance.remoteCharacterDataSourceProvider(characterRequest), "Cannot return null from a non-@Nullable @Provides method");
  }
}
