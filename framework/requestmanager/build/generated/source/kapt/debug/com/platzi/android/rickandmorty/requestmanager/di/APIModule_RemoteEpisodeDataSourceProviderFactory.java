// Generated by Dagger (https://dagger.dev).
package com.platzi.android.rickandmorty.requestmanager.di;

import com.platzi.android.rickandmorty.data.RemoteEpisodeDataSource;
import com.platzi.android.rickandmorty.requestmanager.EpisodeRequest;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class APIModule_RemoteEpisodeDataSourceProviderFactory implements Factory<RemoteEpisodeDataSource> {
  private final APIModule module;

  private final Provider<EpisodeRequest> episodeRequestProvider;

  public APIModule_RemoteEpisodeDataSourceProviderFactory(APIModule module,
      Provider<EpisodeRequest> episodeRequestProvider) {
    this.module = module;
    this.episodeRequestProvider = episodeRequestProvider;
  }

  @Override
  public RemoteEpisodeDataSource get() {
    return remoteEpisodeDataSourceProvider(module, episodeRequestProvider.get());
  }

  public static APIModule_RemoteEpisodeDataSourceProviderFactory create(APIModule module,
      Provider<EpisodeRequest> episodeRequestProvider) {
    return new APIModule_RemoteEpisodeDataSourceProviderFactory(module, episodeRequestProvider);
  }

  public static RemoteEpisodeDataSource remoteEpisodeDataSourceProvider(APIModule instance,
      EpisodeRequest episodeRequest) {
    return Preconditions.checkNotNull(instance.remoteEpisodeDataSourceProvider(episodeRequest), "Cannot return null from a non-@Nullable @Provides method");
  }
}
