// Generated by Dagger (https://dagger.dev).
package com.platzi.android.rickandmorty.data.di;

import com.platzi.android.rickandmorty.data.EpisodeRepository;
import com.platzi.android.rickandmorty.data.RemoteEpisodeDataSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_EpisodeRepositoryProviderFactory implements Factory<EpisodeRepository> {
  private final RepositoryModule module;

  private final Provider<RemoteEpisodeDataSource> remoteEpisodeDataSourceProvider;

  public RepositoryModule_EpisodeRepositoryProviderFactory(RepositoryModule module,
      Provider<RemoteEpisodeDataSource> remoteEpisodeDataSourceProvider) {
    this.module = module;
    this.remoteEpisodeDataSourceProvider = remoteEpisodeDataSourceProvider;
  }

  @Override
  public EpisodeRepository get() {
    return episodeRepositoryProvider(module, remoteEpisodeDataSourceProvider.get());
  }

  public static RepositoryModule_EpisodeRepositoryProviderFactory create(RepositoryModule module,
      Provider<RemoteEpisodeDataSource> remoteEpisodeDataSourceProvider) {
    return new RepositoryModule_EpisodeRepositoryProviderFactory(module, remoteEpisodeDataSourceProvider);
  }

  public static EpisodeRepository episodeRepositoryProvider(RepositoryModule instance,
      RemoteEpisodeDataSource remoteEpisodeDataSource) {
    return Preconditions.checkNotNull(instance.episodeRepositoryProvider(remoteEpisodeDataSource), "Cannot return null from a non-@Nullable @Provides method");
  }
}
